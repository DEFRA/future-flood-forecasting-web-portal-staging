<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
  <changeSet author="pwadmore" id="changelog-truncate-timeseries-data-for-fme-performance-improvements">
    <preConditions onFail="WARN">
      <not>
        <tableExists tableName="FME_JOB_AUDIT" schemaName="FFF_REPORTING"/>
      </not>
    </preConditions>
    <comment>Truncation of timeseries data is required before FME performance related changes are applied.</comment>
    <sql>
      IF (OBJECT_ID('FFF_STAGING.FK_TIMESERIES_TIMESERIES_HEADER', 'F') IS NOT NULL)
        ALTER TABLE FFF_STAGING.TIMESERIES DROP CONSTRAINT FK_TIMESERIES_TIMESERIES_HEADER;
     
      IF (OBJECT_ID('FFF_STAGING.FK_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_HEADER', 'F') IS NOT NULL)
        ALTER TABLE FFF_STAGING.TIMESERIES_STAGING_EXCEPTION DROP CONSTRAINT FK_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_HEADER;
     
      IF (OBJECT_ID('FFF_REPORTING.FK_TIMESERIES_JOB_TIMESERIES', 'F') IS NOT NULL)
        ALTER TABLE FFF_REPORTING.TIMESERIES_JOB DROP CONSTRAINT FK_TIMESERIES_JOB_TIMESERIES;

      IF (OBJECT_ID('FFF_STAGING.FK_INACTIVE_STAGING_EXCEPTION_STAGING_EXCEPTION', 'F') IS NOT NULL)
        ALTER TABLE FFF_STAGING.INACTIVE_STAGING_EXCEPTION DROP CONSTRAINT FK_INACTIVE_STAGING_EXCEPTION_STAGING_EXCEPTION;

      IF (OBJECT_ID('FFF_STAGING.FK_INACTIVE_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_STAGING_EXCEPTION', 'F') IS NOT NULL)
        ALTER TABLE FFF_STAGING.INACTIVE_TIMESERIES_STAGING_EXCEPTION DROP CONSTRAINT FK_INACTIVE_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_STAGING_EXCEPTION;      
    
      IF OBJECT_ID('FFF_REPORTING.TIMESERIES_JOB', 'U') IS NOT NULL
        TRUNCATE TABLE FFF_REPORTING.TIMESERIES_JOB;

      IF OBJECT_ID('FFF_STAGING.STAGING_EXCEPTION', 'U') IS NOT NULL
        TRUNCATE TABLE FFF_STAGING.STAGING_EXCEPTION;
     
      IF OBJECT_ID('FFF_STAGING.TIMESERIES_STAGING_EXCEPTION', 'U') IS NOT NULL
        TRUNCATE TABLE FFF_STAGING.TIMESERIES_STAGING_EXCEPTION;
     
      IF OBJECT_ID('FFF_STAGING.TIMESERIES', 'U') IS NOT NULL
        TRUNCATE TABLE FFF_STAGING.TIMESERIES;
     
      IF OBJECT_ID('FFF_STAGING.TIMESERIES_HEADER', 'U') IS NOT NULL
        TRUNCATE TABLE FFF_STAGING.TIMESERIES_HEADER;
     
      IF (OBJECT_ID('FFF_STAGING.FK_TIMESERIES_TIMESERIES_HEADER', 'F') IS NULL)
        ALTER TABLE FFF_STAGING.TIMESERIES WITH CHECK ADD CONSTRAINT FK_TIMESERIES_TIMESERIES_HEADER FOREIGN KEY(TIMESERIES_HEADER_ID)
          REFERENCES FFF_STAGING.TIMESERIES_HEADER (ID);
     
      IF (OBJECT_ID('FFF_STAGING.FK_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_HEADER', 'F') IS NULL)
        ALTER TABLE FFF_STAGING.TIMESERIES_STAGING_EXCEPTION WITH CHECK ADD CONSTRAINT FK_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_HEADER FOREIGN KEY(TIMESERIES_HEADER_ID)
          REFERENCES FFF_STAGING.TIMESERIES_HEADER (ID);
     
      IF (OBJECT_ID('FFF_REPORTING.FK_TIMESERIES_JOB_TIMESERIES', 'F') IS NULL)
        ALTER TABLE FFF_REPORTING.TIMESERIES_JOB  WITH CHECK ADD CONSTRAINT FK_TIMESERIES_JOB_TIMESERIES FOREIGN KEY(TIMESERIES_ID)
          REFERENCES FFF_STAGING.TIMESERIES (ID);

      IF (OBJECT_ID('FFF_STAGING.FK_INACTIVE_STAGING_EXCEPTION_STAGING_EXCEPTION', 'F') IS NULL)
        ALTER TABLE FFF_STAGING.INACTIVE_STAGING_EXCEPTION WITH CHECK ADD CONSTRAINT FK_INACTIVE_STAGING_EXCEPTION_STAGING_EXCEPTION FOREIGN KEY(STAGING_EXCEPTION_ID)
          REFERENCES FFF_STAGING.STAGING_EXCEPTION (ID);

      IF (OBJECT_ID('FFF_STAGING.FK_INACTIVE_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_STAGING_EXCEPTION', 'F') IS NULL)
        ALTER TABLE FFF_STAGING.INACTIVE_TIMESERIES_STAGING_EXCEPTION WITH CHECK ADD CONSTRAINT FK_INACTIVE_TIMESERIES_STAGING_EXCEPTION_TIMESERIES_STAGING_EXCEPTION FOREIGN KEY(TIMESERIES_STAGING_EXCEPTION_ID)
          REFERENCES FFF_STAGING.TIMESERIES_STAGING_EXCEPTION (ID);

    </sql>
    <rollback>
      <comment>Perform a database restore if rollback is required.</comment>
      <sql>
      </sql>
    </rollback>
  </changeSet>
</databaseChangeLog>
